<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
 
	<context:property-placeholder location="classpath:application.properties" />
   	<mvc:annotation-driven />
	<mvc:default-servlet-handler />
	<context:component-scan base-package="org.qrbarcode" />
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	        <!-- Example: a logical view name of 'showMessage' is mapped to '/WEB-INF/jsp/showMessage.jsp' -->
	        <property name="prefix" value="/WEB-INF/views/"/>
	        <property name="suffix" value=".jsp"/>
	</bean>
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value= "/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
	</bean>
	
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
	    <property name="defaultEncoding" value="UTF-8"/>
	    <property name="basename" value="classpath:messages" />
	</bean>
	
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/theme/**" location="/theme/" />
	<mvc:resources mapping="/default/**" location="/default/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/fonts/**" location="/fonts/" />
	<mvc:resources mapping="/images/**" location="/images/" />

	<!--
	<bean id="btmConfig" factory-method="getConfiguration" class="bitronix.tm.TransactionManagerServices">
		<property name="serverId" value="${node.name}-btx-server" />
		<property name="logPart1Filename" value="${transaction.manager.logfile1:/var/run/myproject/${node.name}-btm1.tlog}" />
		<property name="logPart2Filename" value="${transaction.manager.logfile2:/var/run/myproject/${node.name}-btm2.tlog}" />
	</bean>
	-->
	
	<bean id="primaryDataSource" class="bitronix.tm.resource.jdbc.PoolingDataSource" init-method="init" destroy-method="close" depends-on="btmConfig">
	    <property name="className" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
	    <property name="uniqueName" value="primary-dee-development" />
	    <property name="minPoolSize" value="1" />
	    <property name="maxPoolSize" value="1" />
	    <property name="testQuery" value="SELECT 1" />
	    <property name="allowLocalTransactions" value="true" />
	    <property name="driverProperties">
	      <props>
	      	<prop key="url">${primary.db.url}</prop>
	        <prop key="user">${primary.db.user}</prop>
	        <prop key="password">${primary.db.password}</prop>
	        <!-- <prop key="serverName">${primary.db.host}</prop>
	        <prop key="portNumber">${primary.db.port}</prop>
	        <prop key="databaseName">${primary.db.dbname}</prop> -->
	      </props>
	    </property>
	</bean>
	
	<bean id="secondaryDataSource" class="bitronix.tm.resource.jdbc.PoolingDataSource" init-method="init" destroy-method="close" depends-on="primaryDataSource">
	    <property name="className" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
	    <property name="uniqueName" value="secondary-nav" />
	    <property name="minPoolSize" value="1" />
	    <property name="maxPoolSize" value="1" />
	    <property name="testQuery" value="SELECT 1" />
	    <property name="allowLocalTransactions" value="true" />
	    <property name="driverProperties">
	      <props>
	      	<prop key="url">${secondary.db.url}</prop>
	        <prop key="user">${secondary.db.user}</prop>
	        <prop key="password">${secondary.db.password}</prop>
	      </props>
	    </property>
	</bean>
	

	<bean id="baseSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.jdbc.batch_size">50</prop>
                <prop key="hibernate.use_sql_comments">true</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
        
        <!-- <property name="mappingLocations">
            <list>
                <value>classpath*:/hibernate/hbm/**/*.hbm.xml</value>
            </list>
        </property> -->
    </bean>
    
    <!-- Bitronix Transaction Manager Start -->
	<bean id="btmConfig" factory-method="getConfiguration" class="bitronix.tm.TransactionManagerServices">
        <property name="serverId" value="btm-server" />
        <property name="logPart1Filename" value="bitronix.tm.journal.disk.logPart1Filename" />
        <property name="logPart2Filename" value="bitronix.tm.journal.disk.logPart2Filename" />
    </bean>
	
	<!-- create BTM transaction manager -->
  	<bean id="bitronixTransactionManager" factory-method="getTransactionManager" class="bitronix.tm.TransactionManagerServices"
    	depends-on="primaryDataSource,secondaryDataSource" destroy-method="shutdown" />

	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager" primary="true">
		<property name="transactionManager" ref="bitronixTransactionManager" />
	  	<property name="userTransaction" ref="bitronixTransactionManager" />
	  	<property name="defaultTimeout" value="10000" />
	</bean>
	<!-- End -->

	<bean id="primarySessionFactory" parent="baseSessionFactory" depends-on="primaryDataSource" >
		<property name="packagesToScan" value="org.qrbarcode.model" />
	</bean>

    <bean id="secondarySessionFactory" parent="baseSessionFactory" depends-on="secondaryDataSource" >
    	<property name="packagesToScan" value="org.qrbarcode.modelnav" />
    </bean>

    <bean class="org.springframework.orm.hibernate4.HibernateExceptionTranslator"/>

<!-- <bean id="daoWrapper" class="org.qrbarcode.dao.GenericDaoImpl" /> -->    

  	<tx:annotation-driven transaction-manager="transactionManager" />
  
  
</beans>
